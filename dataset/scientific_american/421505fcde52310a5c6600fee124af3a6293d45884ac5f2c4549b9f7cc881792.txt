Read Our Latest Issue Fetch Robotics CEO Melonee Wise talks about the need for standardizing robots and diversifying engineering teams The field of robotics has long been held back by issues of diversity--too much of it in the robots themselves and not enough of it among the engineers designing and building them. Software written to, for example, coordinate the movement of limbs or wheels on one robot often will not work on any other robot. And studies have shown artificial intelligence algorithms--including those robots use to identify people and objects--tend to reflect their developers' . has spent her career correcting these problems. Her career path has taken her from programmer at the pioneering robotics start-up Willow Garage to CEO of . At Fetch, she is addressing the robot diversity issue by building machines that run on the Robot Operating System (ROS) she helped develop at Willow. ROS lets programmers write software that can run on many different types of robots and freely share that code with the larger robotics community. Prior to ROS, engineers had to write most of their robot software from scratch. Fetch's bots look like something out of a droid factory and are designed to patrol large warehouses, helping workers move materials from place to place while mapping the routes along the way. Fetch uses that mapping data to then help companies such as the delivery service DHL save time and money by improving their warehouses' layouts and logistics. spoke with Wise about why she favors functional, workhorse robots (more like R2-D2 than C-3PO), ROS's impact on robotics and her efforts to make the engineering more accessible both as a discipline and a career path. [ ] That's a difficult question, and many roboticists will give you different answers. The simplest definition is that a robot is a device that takes sensor input and then performs some action that affects the physical world based on its programming and the information it collects. When people think of robots, often they will immediately think of a mechanical arm, but it's actually a much broader range of devices. I spent a large portion of my career doing a lot of different things in robotics, including autonomous cars and boats, personal robots, educational robots and experimental robots. None of them were useful. That was a real crisis for me. Many people enjoy doing that kind of basic research, but it wasn't for me. I thought, why am I working on these things if no one is ever going to use them and we can't turn them into something of value? So I turned my focus to collaborative robots that can be used in warehouses. There's a large business opportunity there but also it's the right kind of environment for robots, which work well in semistructured settings as opposed to out in the wild. Outrageously important--if you look at all of the things that have happened in robotics over the past eight years, I would say that you could lay them all firmly at the feet of [the Robot Operating System]. There probably isn't a company that isn't using ROS in some way--whether in R&D or production--as part of their robotic platforms. For example, ROS provides a communication layer that passes standard messages between the robot and the software controlling it. Before ROS there was no standardization of data format or output. The operating system also provides a whole bunch of [software that performs certain mathematical operations] that enable robots to do transformational math as well as a visualization system that would be onerous for a developer to re-create on their own with each new robot. A group of five developers at [robotics start-up] Willow Garage started building ROS [in 2007] as part of the company's PR2 robot. As the operating system matured, I joined the development team. Because ROS is open-source, any developers [including those outside of Willow Garage] were able to contribute to it, and that led to a massive sharing of information on a scale that the robotics community had never seen. That standardization on a single operating system had the added advantage of making reproducibility possible in robotics, meaning researchers could re-create and expand on one another's work. That, in turn, helped accelerate the development of new robots. I'd have to say TurtleBot, which I developed in 2011. Not because it was particularly complicated--in fact it was relatively simple--but largely because it has had such an impact on the robotics community. It's an educational robot using open-source software and hardware that we designed at Willow Garage. Eventually it grew to have a life of its own. I'm now hiring people who learned ROS and robotics by using a TurtleBot. I'm a really bad person to ask about this because I realize I'm a unicorn, and people like to parade me around like I'm a unicorn. Being a female tech CEO is what it is. I prefer to be recognized for the body of work that I've done and my knowledge and contributions. But I also realize that 30 to 40 percent of the time people are asking me about my experience as a woman in that position. In general, I don't. For starters, I've read that say fathers or male relatives have a than female role models over a young woman's decision to pursue a career in STEM. Honestly, I want more people in general to go into engineering. I'm not partial to gender or ethnicity. We are headed toward a serious engineering crisis in the United States. And if we don't change the way we think about engineering and the messages that we send to people about engineering, we are going to have serious problems. We've created a culture where people think it's okay to be bad at math and one that convinces people they're bad at math--and I don't know why we've done that. And then we say to people, "You can only be an engineer if you're the smartest person in the room." That makes some people feel they shouldn't bother applying themselves--people self-select, thinking they're not qualified. I promise you that you can sit someone down who thinks they're bad at math and in 45 minutes show them that's not true. We've also created engineering archetypes that push people away from STEM through TV shows that make us as a group look like the kinds of people you don't want to hang out with. and , for example, send the message, "You want to become an engineer so you can be kind of lonely and weird." Those are not enticing life opportunities. It discourages young people from getting into engineering because we're the ones who get picked on. The has been talking about how to as a discipline, although they haven't been very successful at it yet. That requires large changes in the way we [in the U.S.] think about engineering, math and science. Other cultures don't have this engineering problem. In Asia it's good to be seen as good at math and science. People aspire to be engineers. And because of the way we've framed engineering in our culture, people don't see it as a creative thing. But we actually need engineers who are creative, who don't just walk directly from A to B but rather take a diversion to C. If you look at some of the most recognized people in science, many of them are nontraditional thinkers who took nontraditional education routes. There are many, many people who are interested in math, science, engineering and robotics but for any number of reasons don't have the opportunity to pursue those fields. Saying that minorities and women just aren't interested in tech or science is a lame excuse. Those people are interested but many times feel like it's not worth the effort to break the barriers in front of them. Diversity invites diversity. If you look at an industry and you're confronted with all white males, how can you feel you're going to be successful if you're not a white male? A lack of diversity has hurt robotics directly--we have certain computer vision algorithms that can't recognize people of different ethnicities. Why? Because all of the people who develop those algorithms look the same. Larry Greenemeier is the associate editor of technology for , covering a variety of tech-related topics, including biotech, computers, military tech, nanotech and robots. Credit: Nick Higgins September 8, 2010  --  Larry Greenemeier March 2, 2017  --  Lydia Chain and Larry Greenemeier October 7, 2016  --  Larry Greenemeier April 18, 2018  --  Larry Greenemeier Discover world-changing science. Explore our digital archive back to 1845, including articles by more than 150 Nobel Prize winners. Follow us Scientific american arabic (c) 2021 Scientific American, a Division of Springer Nature America, Inc. All Rights Reserved. Support our award-winning coverage of advances in science & technology. Already a subscriber? Subscribers get more award-winning coverage of advances in science & technology.