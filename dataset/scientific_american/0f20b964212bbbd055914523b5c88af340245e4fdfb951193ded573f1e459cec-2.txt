devices future decades ago computers thousands times slower developers hand tune code near perfection squeeze drop performance software complicated thanks new features improved user experience forth stopped possible software development layers removed raw binary machine code cpu deals developers rely libraries existing code long build instruction scratch time changes reduce duplicated effort greatly speed development time final code contains parts redundant particular app improved efficient tailor segments developers try mitigate disadvantages making code run fast possible theory reduces energy consumption not work practice instructions power hungry end neutralizing benefits net result energy consumption software years cared decade software ran machines